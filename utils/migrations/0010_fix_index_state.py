# Generated by Django 5.2.7 on 2025-10-16 15:08

from django.db import migrations, models


class Migration(migrations.Migration):
    """
    Fix migration state for the ip_address index.

    Migration 0002 created an index named 'utils_reque_ip_addr_b174aa_idx' on the
    old GenericIPAddressField 'ip_address'. Migration 0007 removed that field and
    created a new ForeignKey 'ip_address', which implicitly dropped the old index
    from the database but left it in Django's migration state.

    This migration removes the old index from the state only (not from the database,
    since it's already gone), allowing Django to recognize that the current index
    (utils_reque_ip_addr_948953_idx) is the correct one.
    """

    dependencies = [
        ('utils', '0009_remove_old_index_if_exists'),
    ]

    operations = [
        # Remove the old index from Django's migration state only
        # (it was already removed from the database in migration 0007)
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.RemoveIndex(
                    model_name='requestfingerprint',
                    name='utils_reque_ip_addr_b174aa_idx',
                ),
            ],
            database_operations=[],  # No database changes needed
        ),
    ]
