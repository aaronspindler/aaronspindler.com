[tool.ruff]
# Exclude patterns
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "migrations",
    "staticfiles",
    "node_modules",
    "projects/ActionsUptime",  # Third-party project
]

line-length = 120
target-version = "py313"

[tool.ruff.lint]
# Enable commonly used rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort (import sorting)
]

# Ignore specific rules
ignore = [
    "E501",  # Line too long (handled by ruff format)
]

[tool.ruff.format]
# Ruff's formatter settings (Black-compatible)
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
# Allow star imports and unused variables in test files - they're used for test discovery
"**/tests/*.py" = ["F403", "F405", "F841"]
"**/test_*.py" = ["F403", "F405", "F841"]

# Allow unused imports in __init__.py files
"**/__init__.py" = ["F401"]

# Allow module-level imports not at top in specific files
"utils/views.py" = ["E402"]
"utils/tasks.py" = ["E402"]
"config/settings.py" = ["E402"]

# Allow User variable naming convention in tests (Django pattern)
"accounts/tests/*.py" = ["N806"]
"utils/tests/*.py" = ["N806"]

# Allow custom setUp method names in test factories
"tests/factories.py" = ["N802"]

# Allow bare except in admin display methods and image utils (EXIF parsing)
"blog/admin.py" = ["E722"]
"**/admin.py" = ["E722"]
"photos/image_utils.py" = ["E722"]

# Allow method redefinition in sitemaps (Django sitemaps pattern)
"**/sitemaps.py" = ["F811"]

# Allow unused subprocess results in build commands
"pages/management/commands/build_css.py" = ["F841"]
"pages/management/commands/optimize_js.py" = ["F841"]

# Allow undefined names in test patches (mocked decorators)
"photos/tests/test_tasks.py" = ["F821", "F841"]

# Allow unused variables in forms (validation side effects)
"photos/forms.py" = ["F841"]

[tool.ruff.lint.isort]
# Configure Ruff's import sorting
known-first-party = ["accounts", "blog", "pages", "photos", "utils", "config"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.mypy]
# MyPy type checking configuration
python_version = "3.13"
ignore_missing_imports = true
no_strict_optional = true

# Exclude patterns (same as ruff)
exclude = [
    "^migrations/",
    "^venv/",
    "^\\.venv/",
    "^staticfiles/",
    "^node_modules/",
    "^projects/ActionsUptime/",  # Third-party project with duplicate module names
]

# Django model fields don't need explicit type annotations
# django-stubs provides type information automatically
[[tool.mypy.overrides]]
module = [
    "*.models",
    "*.models.*",
]
disable_error_code = ["var-annotated"]

# Django admin.py files use deprecated decorator patterns that mypy doesn't understand
[[tool.mypy.overrides]]
module = [
    "*.admin",
]
disable_error_code = ["attr-defined", "no-redef"]

# Django forms and sitemaps have known issues with mypy
[[tool.mypy.overrides]]
module = [
    "*.forms",
    "*.sitemaps",
]
disable_error_code = ["name-defined", "var-annotated", "no-redef"]

# Specific module overrides for known issues
[[tool.mypy.overrides]]
module = [
    "blog.knowledge_graph",
    "config.settings_test",
]
disable_error_code = ["union-attr", "attr-defined", "var-annotated", "assignment"]

# Photos module uses requests without type stubs
[[tool.mypy.overrides]]
module = [
    "photos.views",
    "photos.tests.*",
]
disable_error_code = ["import-untyped"]
