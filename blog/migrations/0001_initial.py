# Generated by Django 5.2.5 on 2025-09-22 16:02

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_template_name', models.CharField(help_text="Template name of the blog post (e.g., '0001_what_even_is_this')", max_length=255)),
                ('blog_category', models.CharField(blank=True, help_text="Category of the blog post (e.g., 'tech', 'personal')", max_length=50, null=True)),
                ('author_name', models.CharField(blank=True, help_text='Name for anonymous commenters', max_length=100)),
                ('author_email', models.EmailField(blank=True, help_text='Email for anonymous commenters (not displayed publicly)', max_length=254)),
                ('content', models.TextField(help_text='Comment content (max 2000 characters)', validators=[django.core.validators.MaxLengthValidator(2000)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('spam', 'Spam')], default='pending', help_text='Moderation status of the comment', max_length=10)),
                ('moderated_at', models.DateTimeField(blank=True, null=True)),
                ('moderation_note', models.TextField(blank=True, help_text='Internal note about moderation decision')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of commenter for spam detection', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser user agent for spam detection')),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, help_text='Registered user who made the comment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_comments', to=settings.AUTH_USER_MODEL)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.blogcomment')),
            ],
            options={
                'verbose_name': 'Blog Comment',
                'verbose_name_plural': 'Blog Comments',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['blog_template_name', 'blog_category', 'status'], name='blog_blogco_blog_te_6d0ced_idx'), models.Index(fields=['created_at'], name='blog_blogco_created_ebf67a_idx'), models.Index(fields=['author'], name='blog_blogco_author__376d5d_idx'), models.Index(fields=['status'], name='blog_blogco_status_cfc0e1_idx')],
            },
        ),
    ]
