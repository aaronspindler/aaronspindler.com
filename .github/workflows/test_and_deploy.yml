name: Test and Deploy

on: [ push, pull_request ]

env:
  SECRET_KEY: "FAKE_SECRET_KEY"
  DATABASE_URL: ${{secrets.DATABASE_URL}}

jobs:
  test-and-check:
    strategy:
      matrix:
        python-version: [3.12.2]
        postgres-version: [15]
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 3s
          --health-retries 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      - name: Cache static files
        uses: actions/cache@v3
        with:
          path: staticfiles/
          key: ${{ runner.os }}-static-${{ hashFiles('**/static/**') }}
          restore-keys: |
            ${{ runner.os }}-static-
      - name: Collect Static
        run: |
          python manage.py collectstatic --no-input
      - name: Run Check
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
           python manage.py check
      - name: Run Tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          coverage run --source='.' manage.py test --no-input --parallel
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4

  deploy-caprover:
    runs-on: ubuntu-latest
    needs: test-and-check
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          cwd: "./"
          files: |
            .
          outPath: deploy.tar
      - name: Deploy web app
        uses: caprover/deploy-from-github@v1.0.1
        with:
          server: '${{ secrets.NEW_CAPROVER_SERVER }}'
          app: '${{ secrets.CAPROVER_WEB_APP_NAME }}'
          token: '${{ secrets.NEW_CAPROVER_WEB_APP_TOKEN }}'
