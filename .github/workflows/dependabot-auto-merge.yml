name: Dependabot Auto-Merge

on:
  # Trigger when the test workflow completes
  workflow_run:
    workflows: ["Test Dependabot PRs"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write

jobs:
  # Auto-merge after tests pass
  dependabot-auto-merge:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # Only run if the test workflow succeeded and was for a Dependabot PR
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.actor.login == 'dependabot[bot]'
    
    steps:
      # Note: We do NOT checkout the PR code for security reasons
      # We only need the GitHub API to enable auto-merge
      
      # Get the PR number from the workflow run
      - name: Get PR data
        id: pr
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea  # v7.0.1
        with:
          script: |
            // Get the PR associated with the workflow run
            const pullRequests = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`
            });
            
            if (pullRequests.data.length === 0) {
              core.setFailed('No PR found for this workflow run');
              return;
            }
            
            const pr = pullRequests.data[0];
            core.setOutput('number', pr.number);
            core.setOutput('html_url', pr.html_url);
            core.setOutput('labels', JSON.stringify(pr.labels.map(l => l.name)));
            
            // Log PR info
            console.log(`Found PR #${pr.number}: ${pr.title}`);
            console.log(`Labels: ${pr.labels.map(l => l.name).join(', ')}`);
      
      - name: Get Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@dbb049abf0d677abbd7f7eee0375145b417fdd34  # v2.2.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      # Note: GitHub Actions cannot approve its own PRs for security reasons
      # The PR will be auto-merged without explicit approval if tests pass
      
      - name: Enable auto-merge for Dependabot PR
        # Merge conditions:
        # 1. PR must have the "auto-merge" label (set in dependabot.yml)
        # 2. Tests must have passed (enforced by job dependency)
        # 3. Only merge minor and patch updates automatically, skip major updates
        if: |
          contains(fromJson(steps.pr.outputs.labels), 'auto-merge') &&
          (steps.metadata.outputs.update-type == 'version-update:semver-minor' ||
           steps.metadata.outputs.update-type == 'version-update:semver-patch')
        run: |
          echo "Enabling auto-merge for Dependabot PR: ${{ steps.metadata.outputs.dependency-names }}"
          echo "Update type: ${{ steps.metadata.outputs.update-type }}"
          # Enable auto-merge (will merge when all checks pass and requirements are met)
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ steps.pr.outputs.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add comment for major updates
        # Notify for major updates that require manual review
        if: |
          contains(fromJson(steps.pr.outputs.labels), 'auto-merge') &&
          steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr comment "$PR_URL" --body "‚ö†Ô∏è **Major version update detected** for ${{ steps.metadata.outputs.dependency-names }}
          
          This PR updates from version ${{ steps.metadata.outputs.previous-version }} to ${{ steps.metadata.outputs.new-version }}.
          
          Major version updates may contain breaking changes and require manual review before merging.
          
          ‚úÖ **All tests have passed** for this update.
          
          Please review the changelog and test thoroughly before merging."
        env:
          PR_URL: ${{ steps.pr.outputs.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Enable auto-merge for security updates
        # Always auto-merge security updates regardless of version type
        if: |
          contains(fromJson(steps.pr.outputs.labels), 'security') &&
          contains(fromJson(steps.pr.outputs.labels), 'auto-merge')
        run: |
          echo "üîí Security update detected - enabling auto-merge"
          # Enable auto-merge for security updates (will merge when all checks pass)
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ steps.pr.outputs.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}