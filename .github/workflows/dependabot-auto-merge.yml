name: Dependabot Auto-Merge

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

# Cancel previous runs for the same PR
concurrency:
  group: dependabot-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  # Run tests for Dependabot PRs
  test-dependabot-pr:
    # Only run on Dependabot PRs and skip if [skip ci] is in the title
    if: |
      github.actor == 'dependabot[bot]' &&
      !contains(github.event.pull_request.title, '[skip ci]')
    uses: ./.github/workflows/test-and-check.yml
    with:
      python-version: '3.12.2'
      postgres-version: '15'
      upload-coverage: false  # Don't upload coverage for Dependabot PRs
      # CRITICAL: Must checkout PR head to test actual PR code, not base branch
      ref: ${{ github.event.pull_request.head.sha }}
    secrets:
      DATABASE_URL: ${{secrets.DATABASE_URL}}

  # Auto-merge after tests pass
  dependabot-auto-merge:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: test-dependabot-pr
    # Only run on Dependabot PRs and if tests passed
    if: github.actor == 'dependabot[bot]' && needs.test-dependabot-pr.result == 'success'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Use the PR head to get the correct commit
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Get Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Auto-approve Dependabot PR
        # Approve since tests have passed
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Auto-merge Dependabot PR
        # Merge conditions:
        # 1. PR must have the "auto-merge" label (set in dependabot.yml)
        # 2. Tests must have passed (enforced by job dependency)
        # 3. Only merge minor and patch updates automatically, skip major updates
        if: |
          contains(github.event.pull_request.labels.*.name, 'auto-merge') &&
          (steps.metadata.outputs.update-type == 'version-update:semver-minor' ||
           steps.metadata.outputs.update-type == 'version-update:semver-patch')
        run: |
          echo "Auto-merging Dependabot PR for ${{ steps.metadata.outputs.dependency-names }}"
          echo "Update type: ${{ steps.metadata.outputs.update-type }}"
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add comment for major updates
        # Notify for major updates that require manual review
        if: |
          contains(github.event.pull_request.labels.*.name, 'auto-merge') &&
          steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr comment "$PR_URL" --body "‚ö†Ô∏è **Major version update detected** for ${{ steps.metadata.outputs.dependency-names }}
          
          This PR updates from version ${{ steps.metadata.outputs.previous-version }} to ${{ steps.metadata.outputs.new-version }}.
          
          Major version updates may contain breaking changes and require manual review before merging.
          
          ‚úÖ **All tests have passed** for this update.
          
          Please review the changelog and test thoroughly before merging."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Handle security updates
        # Always auto-merge security updates regardless of version type
        if: |
          contains(github.event.pull_request.labels.*.name, 'security') &&
          contains(github.event.pull_request.labels.*.name, 'auto-merge')
        run: |
          echo "üîí Security update detected - auto-merging"
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}