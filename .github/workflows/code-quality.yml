name: Code Quality

on:
  pull_request:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements*.txt'
      - '.github/workflows/code-quality.yml'
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements*.txt'
      - '.github/workflows/code-quality.yml'

# Cancel in-progress runs for the same ref
concurrency:
  group: code-quality-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.2'
          cache: 'pip'
      
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff black isort pylint
      
      - name: Run Ruff linter
        run: |
          ruff check . --output-format=github
        continue-on-error: true
      
      - name: Check Black formatting
        run: |
          black --check --diff .
        continue-on-error: true
      
      - name: Check import sorting with isort
        run: |
          isort --check-only --diff .
        continue-on-error: true
      
      - name: Run Pylint
        run: |
          # Run pylint on Python files, ignoring migrations and venv
          find . -type f -name "*.py" \
            -not -path "./venv/*" \
            -not -path "./migrations/*" \
            -not -path "./.git/*" \
            | xargs pylint --exit-zero --reports=y
        continue-on-error: true
      
      - name: Security audit with pip-audit
        run: |
          pip install pip-audit
          pip-audit --desc
        continue-on-error: true

  type-checking:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.2'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy django-stubs
      
      - name: Run MyPy type checking
        run: |
          mypy . --ignore-missing-imports --no-strict-optional
        continue-on-error: true
