name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 5 * * *'  # Runs at 5:30 AM UTC every day

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write  # Required to create commits and PRs
      security-events: write
      pull-requests: write  # Required for Copilot Autofix to post suggestions

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        config-file: ./.github/codeql/codeql-config.yml

    - name: Autobuild
      uses: github/codeql-action/autobuild@v4

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{ matrix.language }}"

  # Job to create PRs for CodeQL alerts with GitHub Copilot Autofix suggestions
  # Only runs on scheduled scans (not on push) to avoid creating duplicate PRs
  autofix:
    name: Create Alert PRs for Copilot Review
    needs: analyze
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      contents: write
      pull-requests: write
      security-events: read
      issues: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Get CodeQL alerts
      id: get-alerts
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Fetch code scanning alerts
        alerts=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/code-scanning/alerts \
          --jq '[.[] | select(.state == "open" and .tool.name == "CodeQL")]')

        alert_count=$(echo "$alerts" | jq 'length')
        echo "alert-count=$alert_count" >> $GITHUB_OUTPUT

        if [ "$alert_count" -gt 0 ]; then
          echo "has-alerts=true" >> $GITHUB_OUTPUT
          echo "Found $alert_count open CodeQL alerts"

          # Save alerts for autofix script
          echo "$alerts" > alerts.json

          # Save alert details for PR body
          echo "$alerts" | jq -r '.[] | "- **\(.rule.description)** (\(.rule.severity))\n  File: \(.most_recent_instance.location.path):\(.most_recent_instance.location.start_line)\n  Message: \(.most_recent_instance.message.text)\n"' > alert_details.txt
        else
          echo "has-alerts=false" >> $GITHUB_OUTPUT
          echo "No open CodeQL alerts found"
        fi

    - name: Create PR for CodeQL alerts
      if: steps.get-alerts.outputs.has-alerts == 'true'
      id: create-pr
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # Create a new branch for autofix
        branch_name="codeql-autofix-$(date +%Y%m%d-%H%M%S)"
        git checkout -b "$branch_name"

        alert_count="${{ steps.get-alerts.outputs.alert-count }}"

        # Create marker file with alert details
        mkdir -p .github/codeql-alerts
        echo "# CodeQL Security Alerts Detected" > .github/codeql-alerts/README.md
        echo "" >> .github/codeql-alerts/README.md
        echo "This PR was automatically created because CodeQL detected **$alert_count** code quality alert(s)." >> .github/codeql-alerts/README.md
        echo "" >> .github/codeql-alerts/README.md
        echo "GitHub Copilot Autofix will analyze these alerts and suggest fixes as PR comments." >> .github/codeql-alerts/README.md
        echo "" >> .github/codeql-alerts/README.md
        echo "## Detected Issues ($alert_count total)" >> .github/codeql-alerts/README.md
        echo "" >> .github/codeql-alerts/README.md
        cat alert_details.txt >> .github/codeql-alerts/README.md

        git add .github/codeql-alerts/README.md
        git commit -m "security: CodeQL detected $alert_count alert(s) - awaiting Copilot Autofix suggestions"

        git push origin "$branch_name"

        # Create PR
        pr_body="## 🔒 CodeQL Security Alerts Detected

        This PR was automatically created because CodeQL detected **$alert_count** code quality alert(s) during a scheduled scan.

        ### 🤖 GitHub Copilot Autofix

        GitHub Copilot Autofix will automatically analyze these alerts and post fix suggestions as comments on this PR within a few minutes. To apply suggested fixes:
        1. Review the Copilot suggestions posted as PR comments
        2. Click to apply any fixes you want to use
        3. Commit the changes to this PR

        ### 📋 What to do next

        1. Wait for Copilot Autofix suggestions (usually appears within 2-5 minutes)
        2. Review and apply the suggested fixes
        3. Run tests to ensure nothing broke: \`python manage.py test\`
        4. Merge this PR once all issues are resolved

        ### 🔍 Detected Issues

        $(cat alert_details.txt)

        ### 📚 Additional Resources

        - [View all alerts in Security tab](https://github.com/${{ github.repository }}/security/code-scanning)
        - [CodeQL documentation](https://codeql.github.com/docs/)
        - [GitHub Copilot Autofix documentation](https://docs.github.com/en/code-security/code-scanning/managing-code-scanning-alerts/about-autofix-for-codeql-code-scanning)

        ---
        *This PR was automatically created by the CodeQL workflow on $(date -u '+%Y-%m-%d %H:%M:%S UTC')*"

        pr_url=$(gh pr create \
          --title "🔒 Security: Fix $alert_count CodeQL alert(s)" \
          --body "$pr_body" \
          --base main \
          --head "$branch_name" \
          --label "security,codeql,automated")

        pr_number=$(echo "$pr_url" | grep -o '[0-9]*$')
        echo "pr-number=$pr_number" >> $GITHUB_OUTPUT
        echo "pr-url=$pr_url" >> $GITHUB_OUTPUT

        echo ""
        echo "✅ Created PR #$pr_number for CodeQL alerts"
        echo "📝 URL: $pr_url"
        echo ""
        echo "🤖 GitHub Copilot Autofix will analyze the alerts and post fix suggestions"
        echo "   as comments on the PR. This usually takes 2-5 minutes."
