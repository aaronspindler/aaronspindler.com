name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 5 * * *'  # Runs at 5:30 AM UTC every day

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write  # Required to create commits and PRs
      security-events: write
      pull-requests: write  # Required for Copilot Autofix to post suggestions

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        config-file: ./.github/codeql/codeql-config.yml

    - name: Autobuild
      uses: github/codeql-action/autobuild@v4

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{ matrix.language }}"

  # Job to create PRs with automated fixes using GitHub Copilot Autofix
  # Only runs on scheduled scans (not on push) to avoid creating duplicate PRs
  autofix:
    name: Create Autofix PRs
    needs: analyze
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      contents: write
      pull-requests: write
      security-events: read
      issues: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Get CodeQL alerts
      id: get-alerts
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Fetch code scanning alerts
        alerts=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/code-scanning/alerts \
          --jq '[.[] | select(.state == "open" and .tool.name == "CodeQL")]')

        alert_count=$(echo "$alerts" | jq 'length')
        echo "alert-count=$alert_count" >> $GITHUB_OUTPUT

        if [ "$alert_count" -gt 0 ]; then
          echo "has-alerts=true" >> $GITHUB_OUTPUT
          echo "Found $alert_count open CodeQL alerts"

          # Save alerts for autofix script
          echo "$alerts" > alerts.json

          # Save alert details for PR body
          echo "$alerts" | jq -r '.[] | "- **\(.rule.description)** (\(.rule.severity))\n  File: \(.most_recent_instance.location.path):\(.most_recent_instance.location.start_line)\n  Message: \(.most_recent_instance.message.text)\n"' > alert_details.txt
        else
          echo "has-alerts=false" >> $GITHUB_OUTPUT
          echo "No open CodeQL alerts found"
        fi

    - name: Apply automated fixes
      if: steps.get-alerts.outputs.has-alerts == 'true'
      run: |
        echo "Applying automated fixes for CodeQL alerts..."
        python .github/scripts/autofix_codeql.py alerts.json

    - name: Create PR with automated fixes
      if: steps.get-alerts.outputs.has-alerts == 'true'
      id: create-pr
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # Create a new branch for autofix
        branch_name="codeql-autofix-$(date +%Y%m%d-%H%M%S)"
        git checkout -b "$branch_name"

        alert_count="${{ steps.get-alerts.outputs.alert-count }}"

        # Check if automated fixes were applied
        if git diff --quiet; then
          echo "⚠️  No fixes could be applied automatically"
          echo "Creating PR with alert details for manual review..."

          # Create marker file for manual review
          mkdir -p .github/codeql-autofix
          echo "No automated fixes could be applied. Manual review required." > .github/codeql-autofix/README.md
          echo "" >> .github/codeql-autofix/README.md
          echo "## Detected Issues ($alert_count total)" >> .github/codeql-autofix/README.md
          echo "" >> .github/codeql-autofix/README.md
          cat alert_details.txt >> .github/codeql-autofix/README.md

          git add .github/codeql-autofix/README.md
          git commit -m "docs: CodeQL alerts detected - manual review required"
        else
          echo "✅ Automated fixes were applied"

          # Commit the automated fixes
          git add -A
          git commit -m "fix: Apply automated CodeQL fixes

          Automatically fixed $alert_count CodeQL alert(s) using the automated
          fix script (.github/scripts/autofix_codeql.py).

          Changes include:
          - Unused variables prefixed with underscore (_)
          - Imprecise asserts replaced with specific methods
          - Redundant assignments removed
          - Empty except blocks documented
          - Unreachable code removed
          - Unnecessary pass statements removed

          GitHub Copilot Autofix will analyze these changes and may suggest
          additional improvements."
        fi

        git push origin "$branch_name"

        # Create PR
        pr_body="## 🔒 CodeQL Security Alerts - Automated Fixes + Copilot Review

        This PR was automatically created because CodeQL detected **$alert_count** code quality alert(s).

        ### ✨ Automated Fixes Applied

        Our custom fix script has automatically resolved common issues:
        - **Unused variables**: Prefixed with underscore (_)
        - **Imprecise asserts**: Replaced with specific methods (assertIn, assertGreater, etc.)
        - **Redundant assignments**: Removed
        - **Empty except blocks**: Added explanatory comments
        - **Unreachable code**: Removed
        - **Unnecessary pass statements**: Removed

        ### 🤖 GitHub Copilot Autofix

        Since this PR modifies files with CodeQL alerts, GitHub Copilot Autofix will automatically:
        1. Analyze the automated fixes
        2. Review any remaining alerts
        3. Post additional fix suggestions as PR comments (if applicable)

        ### 📋 What to do next

        1. Review the automated fixes in the Files Changed tab
        2. Check for any Copilot suggestions posted as comments
        3. Run tests to ensure nothing broke: \`python manage.py test\`
        4. Merge this PR once you're satisfied

        ### 🔍 Detected Issues

        $(cat alert_details.txt)

        ### 📚 Additional Resources

        - [View all alerts in Security tab](https://github.com/${{ github.repository }}/security/code-scanning)
        - [CodeQL documentation](https://codeql.github.com/docs/)
        - [Automated fix script](.github/scripts/autofix_codeql.py)

        ---
        *This PR was automatically created by the CodeQL workflow on $(date -u '+%Y-%m-%d %H:%M:%S UTC')*"

        pr_url=$(gh pr create \
          --title "🔒 Security: Fix $alert_count CodeQL alert(s)" \
          --body "$pr_body" \
          --base main \
          --head "$branch_name" \
          --label "security,codeql,automated")

        pr_number=$(echo "$pr_url" | grep -o '[0-9]*$')
        echo "pr-number=$pr_number" >> $GITHUB_OUTPUT
        echo "pr-url=$pr_url" >> $GITHUB_OUTPUT

        echo ""
        echo "✅ Created PR #$pr_number with automated fixes"
        echo "📝 URL: $pr_url"
        echo ""
        echo "GitHub Copilot Autofix will now analyze the changes and post any additional"
        echo "suggestions as comments on the PR. This usually takes a few minutes."
